/**
 * Autogenerated by Thrift Compiler (0.11.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.lsy.knowledge.traffic.base.domain.thrift;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.11.0)", date = "2017-12-27")
public class point_traj_t implements org.apache.thrift.TBase<point_traj_t, point_traj_t._Fields>, java.io.Serializable, Cloneable, Comparable<point_traj_t> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("point_traj_t");

  private static final org.apache.thrift.protocol.TField USER_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("user_id", org.apache.thrift.protocol.TType.STRING, (short)1);
  private static final org.apache.thrift.protocol.TField POINT_VEC_FIELD_DESC = new org.apache.thrift.protocol.TField("point_vec", org.apache.thrift.protocol.TType.LIST, (short)2);
  private static final org.apache.thrift.protocol.TField BIZTYPE_FIELD_DESC = new org.apache.thrift.protocol.TField("biztype", org.apache.thrift.protocol.TType.I16, (short)3);
  private static final org.apache.thrift.protocol.TField ROLE_FIELD_DESC = new org.apache.thrift.protocol.TField("role", org.apache.thrift.protocol.TType.I16, (short)4);
  private static final org.apache.thrift.protocol.TField PHONE_FIELD_DESC = new org.apache.thrift.protocol.TField("phone", org.apache.thrift.protocol.TType.STRING, (short)5);
  private static final org.apache.thrift.protocol.TField INTIME_FIELD_DESC = new org.apache.thrift.protocol.TField("intime", org.apache.thrift.protocol.TType.I64, (short)6);
  private static final org.apache.thrift.protocol.TField DATA_SOURCE_FROM_FIELD_DESC = new org.apache.thrift.protocol.TField("data_source_from", org.apache.thrift.protocol.TType.I32, (short)7);

  private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new point_traj_tStandardSchemeFactory();
  private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new point_traj_tTupleSchemeFactory();

  public java.lang.String user_id; // required
  public java.util.List<time_point_t> point_vec; // required
  public short biztype; // required
  public short role; // required
  public java.lang.String phone; // required
  public long intime; // required
  public int data_source_from; // optional

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    USER_ID((short)1, "user_id"),
    POINT_VEC((short)2, "point_vec"),
    BIZTYPE((short)3, "biztype"),
    ROLE((short)4, "role"),
    PHONE((short)5, "phone"),
    INTIME((short)6, "intime"),
    DATA_SOURCE_FROM((short)7, "data_source_from");

    private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

    static {
      for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // USER_ID
          return USER_ID;
        case 2: // POINT_VEC
          return POINT_VEC;
        case 3: // BIZTYPE
          return BIZTYPE;
        case 4: // ROLE
          return ROLE;
        case 5: // PHONE
          return PHONE;
        case 6: // INTIME
          return INTIME;
        case 7: // DATA_SOURCE_FROM
          return DATA_SOURCE_FROM;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(java.lang.String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final java.lang.String _fieldName;

    _Fields(short thriftId, java.lang.String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public java.lang.String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __BIZTYPE_ISSET_ID = 0;
  private static final int __ROLE_ISSET_ID = 1;
  private static final int __INTIME_ISSET_ID = 2;
  private static final int __DATA_SOURCE_FROM_ISSET_ID = 3;
  private byte __isset_bitfield = 0;
  private static final _Fields optionals[] = {_Fields.DATA_SOURCE_FROM};
  public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.USER_ID, new org.apache.thrift.meta_data.FieldMetaData("user_id", org.apache.thrift.TFieldRequirementType.DEFAULT,
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING        , "user_id_t")));
    tmpMap.put(_Fields.POINT_VEC, new org.apache.thrift.meta_data.FieldMetaData("point_vec", org.apache.thrift.TFieldRequirementType.DEFAULT,
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST,
            new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, time_point_t.class))));
    tmpMap.put(_Fields.BIZTYPE, new org.apache.thrift.meta_data.FieldMetaData("biztype", org.apache.thrift.TFieldRequirementType.DEFAULT,
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I16)));
    tmpMap.put(_Fields.ROLE, new org.apache.thrift.meta_data.FieldMetaData("role", org.apache.thrift.TFieldRequirementType.DEFAULT,
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I16)));
    tmpMap.put(_Fields.PHONE, new org.apache.thrift.meta_data.FieldMetaData("phone", org.apache.thrift.TFieldRequirementType.DEFAULT,
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.INTIME, new org.apache.thrift.meta_data.FieldMetaData("intime", org.apache.thrift.TFieldRequirementType.DEFAULT,
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64        , "time_t")));
    tmpMap.put(_Fields.DATA_SOURCE_FROM, new org.apache.thrift.meta_data.FieldMetaData("data_source_from", org.apache.thrift.TFieldRequirementType.OPTIONAL,
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(point_traj_t.class, metaDataMap);
  }

  public point_traj_t() {
  }

  public point_traj_t(
    java.lang.String user_id,
    java.util.List<time_point_t> point_vec,
    short biztype,
    short role,
    java.lang.String phone,
    long intime)
  {
    this();
    this.user_id = user_id;
    this.point_vec = point_vec;
    this.biztype = biztype;
    setBiztypeIsSet(true);
    this.role = role;
    setRoleIsSet(true);
    this.phone = phone;
    this.intime = intime;
    setIntimeIsSet(true);
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public point_traj_t(point_traj_t other) {
    __isset_bitfield = other.__isset_bitfield;
    if (other.isSetUser_id()) {
      this.user_id = other.user_id;
    }
    if (other.isSetPoint_vec()) {
      java.util.List<time_point_t> __this__point_vec = new java.util.ArrayList<time_point_t>(other.point_vec.size());
      for (time_point_t other_element : other.point_vec) {
        __this__point_vec.add(new time_point_t(other_element));
      }
      this.point_vec = __this__point_vec;
    }
    this.biztype = other.biztype;
    this.role = other.role;
    if (other.isSetPhone()) {
      this.phone = other.phone;
    }
    this.intime = other.intime;
    this.data_source_from = other.data_source_from;
  }

  public point_traj_t deepCopy() {
    return new point_traj_t(this);
  }

  @Override
  public void clear() {
    this.user_id = null;
    this.point_vec = null;
    setBiztypeIsSet(false);
    this.biztype = 0;
    setRoleIsSet(false);
    this.role = 0;
    this.phone = null;
    setIntimeIsSet(false);
    this.intime = 0;
    setData_source_fromIsSet(false);
    this.data_source_from = 0;
  }

  public java.lang.String getUser_id() {
    return this.user_id;
  }

  public point_traj_t setUser_id(java.lang.String user_id) {
    this.user_id = user_id;
    return this;
  }

  public void unsetUser_id() {
    this.user_id = null;
  }

  /** Returns true if field user_id is set (has been assigned a value) and false otherwise */
  public boolean isSetUser_id() {
    return this.user_id != null;
  }

  public void setUser_idIsSet(boolean value) {
    if (!value) {
      this.user_id = null;
    }
  }

  public int getPoint_vecSize() {
    return (this.point_vec == null) ? 0 : this.point_vec.size();
  }

  public java.util.Iterator<time_point_t> getPoint_vecIterator() {
    return (this.point_vec == null) ? null : this.point_vec.iterator();
  }

  public void addToPoint_vec(time_point_t elem) {
    if (this.point_vec == null) {
      this.point_vec = new java.util.ArrayList<time_point_t>();
    }
    this.point_vec.add(elem);
  }

  public java.util.List<time_point_t> getPoint_vec() {
    return this.point_vec;
  }

  public point_traj_t setPoint_vec(java.util.List<time_point_t> point_vec) {
    this.point_vec = point_vec;
    return this;
  }

  public void unsetPoint_vec() {
    this.point_vec = null;
  }

  /** Returns true if field point_vec is set (has been assigned a value) and false otherwise */
  public boolean isSetPoint_vec() {
    return this.point_vec != null;
  }

  public void setPoint_vecIsSet(boolean value) {
    if (!value) {
      this.point_vec = null;
    }
  }

  public short getBiztype() {
    return this.biztype;
  }

  public point_traj_t setBiztype(short biztype) {
    this.biztype = biztype;
    setBiztypeIsSet(true);
    return this;
  }

  public void unsetBiztype() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __BIZTYPE_ISSET_ID);
  }

  /** Returns true if field biztype is set (has been assigned a value) and false otherwise */
  public boolean isSetBiztype() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __BIZTYPE_ISSET_ID);
  }

  public void setBiztypeIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __BIZTYPE_ISSET_ID, value);
  }

  public short getRole() {
    return this.role;
  }

  public point_traj_t setRole(short role) {
    this.role = role;
    setRoleIsSet(true);
    return this;
  }

  public void unsetRole() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __ROLE_ISSET_ID);
  }

  /** Returns true if field role is set (has been assigned a value) and false otherwise */
  public boolean isSetRole() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __ROLE_ISSET_ID);
  }

  public void setRoleIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __ROLE_ISSET_ID, value);
  }

  public java.lang.String getPhone() {
    return this.phone;
  }

  public point_traj_t setPhone(java.lang.String phone) {
    this.phone = phone;
    return this;
  }

  public void unsetPhone() {
    this.phone = null;
  }

  /** Returns true if field phone is set (has been assigned a value) and false otherwise */
  public boolean isSetPhone() {
    return this.phone != null;
  }

  public void setPhoneIsSet(boolean value) {
    if (!value) {
      this.phone = null;
    }
  }

  public long getIntime() {
    return this.intime;
  }

  public point_traj_t setIntime(long intime) {
    this.intime = intime;
    setIntimeIsSet(true);
    return this;
  }

  public void unsetIntime() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __INTIME_ISSET_ID);
  }

  /** Returns true if field intime is set (has been assigned a value) and false otherwise */
  public boolean isSetIntime() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __INTIME_ISSET_ID);
  }

  public void setIntimeIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __INTIME_ISSET_ID, value);
  }

  public int getData_source_from() {
    return this.data_source_from;
  }

  public point_traj_t setData_source_from(int data_source_from) {
    this.data_source_from = data_source_from;
    setData_source_fromIsSet(true);
    return this;
  }

  public void unsetData_source_from() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __DATA_SOURCE_FROM_ISSET_ID);
  }

  /** Returns true if field data_source_from is set (has been assigned a value) and false otherwise */
  public boolean isSetData_source_from() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __DATA_SOURCE_FROM_ISSET_ID);
  }

  public void setData_source_fromIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __DATA_SOURCE_FROM_ISSET_ID, value);
  }

  public void setFieldValue(_Fields field, java.lang.Object value) {
    switch (field) {
    case USER_ID:
      if (value == null) {
        unsetUser_id();
      } else {
        setUser_id((java.lang.String)value);
      }
      break;

    case POINT_VEC:
      if (value == null) {
        unsetPoint_vec();
      } else {
        setPoint_vec((java.util.List<time_point_t>)value);
      }
      break;

    case BIZTYPE:
      if (value == null) {
        unsetBiztype();
      } else {
        setBiztype((java.lang.Short)value);
      }
      break;

    case ROLE:
      if (value == null) {
        unsetRole();
      } else {
        setRole((java.lang.Short)value);
      }
      break;

    case PHONE:
      if (value == null) {
        unsetPhone();
      } else {
        setPhone((java.lang.String)value);
      }
      break;

    case INTIME:
      if (value == null) {
        unsetIntime();
      } else {
        setIntime((java.lang.Long)value);
      }
      break;

    case DATA_SOURCE_FROM:
      if (value == null) {
        unsetData_source_from();
      } else {
        setData_source_from((java.lang.Integer)value);
      }
      break;

    }
  }

  public java.lang.Object getFieldValue(_Fields field) {
    switch (field) {
    case USER_ID:
      return getUser_id();

    case POINT_VEC:
      return getPoint_vec();

    case BIZTYPE:
      return getBiztype();

    case ROLE:
      return getRole();

    case PHONE:
      return getPhone();

    case INTIME:
      return getIntime();

    case DATA_SOURCE_FROM:
      return getData_source_from();

    }
    throw new java.lang.IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new java.lang.IllegalArgumentException();
    }

    switch (field) {
    case USER_ID:
      return isSetUser_id();
    case POINT_VEC:
      return isSetPoint_vec();
    case BIZTYPE:
      return isSetBiztype();
    case ROLE:
      return isSetRole();
    case PHONE:
      return isSetPhone();
    case INTIME:
      return isSetIntime();
    case DATA_SOURCE_FROM:
      return isSetData_source_from();
    }
    throw new java.lang.IllegalStateException();
  }

  @Override
  public boolean equals(java.lang.Object that) {
    if (that == null)
      return false;
    if (that instanceof point_traj_t)
      return this.equals((point_traj_t)that);
    return false;
  }

  public boolean equals(point_traj_t that) {
    if (that == null)
      return false;
    if (this == that)
      return true;

    boolean this_present_user_id = true && this.isSetUser_id();
    boolean that_present_user_id = true && that.isSetUser_id();
    if (this_present_user_id || that_present_user_id) {
      if (!(this_present_user_id && that_present_user_id))
        return false;
      if (!this.user_id.equals(that.user_id))
        return false;
    }

    boolean this_present_point_vec = true && this.isSetPoint_vec();
    boolean that_present_point_vec = true && that.isSetPoint_vec();
    if (this_present_point_vec || that_present_point_vec) {
      if (!(this_present_point_vec && that_present_point_vec))
        return false;
      if (!this.point_vec.equals(that.point_vec))
        return false;
    }

    boolean this_present_biztype = true;
    boolean that_present_biztype = true;
    if (this_present_biztype || that_present_biztype) {
      if (!(this_present_biztype && that_present_biztype))
        return false;
      if (this.biztype != that.biztype)
        return false;
    }

    boolean this_present_role = true;
    boolean that_present_role = true;
    if (this_present_role || that_present_role) {
      if (!(this_present_role && that_present_role))
        return false;
      if (this.role != that.role)
        return false;
    }

    boolean this_present_phone = true && this.isSetPhone();
    boolean that_present_phone = true && that.isSetPhone();
    if (this_present_phone || that_present_phone) {
      if (!(this_present_phone && that_present_phone))
        return false;
      if (!this.phone.equals(that.phone))
        return false;
    }

    boolean this_present_intime = true;
    boolean that_present_intime = true;
    if (this_present_intime || that_present_intime) {
      if (!(this_present_intime && that_present_intime))
        return false;
      if (this.intime != that.intime)
        return false;
    }

    boolean this_present_data_source_from = true && this.isSetData_source_from();
    boolean that_present_data_source_from = true && that.isSetData_source_from();
    if (this_present_data_source_from || that_present_data_source_from) {
      if (!(this_present_data_source_from && that_present_data_source_from))
        return false;
      if (this.data_source_from != that.data_source_from)
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    int hashCode = 1;

    hashCode = hashCode * 8191 + ((isSetUser_id()) ? 131071 : 524287);
    if (isSetUser_id())
      hashCode = hashCode * 8191 + user_id.hashCode();

    hashCode = hashCode * 8191 + ((isSetPoint_vec()) ? 131071 : 524287);
    if (isSetPoint_vec())
      hashCode = hashCode * 8191 + point_vec.hashCode();

    hashCode = hashCode * 8191 + biztype;

    hashCode = hashCode * 8191 + role;

    hashCode = hashCode * 8191 + ((isSetPhone()) ? 131071 : 524287);
    if (isSetPhone())
      hashCode = hashCode * 8191 + phone.hashCode();

    hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(intime);

    hashCode = hashCode * 8191 + ((isSetData_source_from()) ? 131071 : 524287);
    if (isSetData_source_from())
      hashCode = hashCode * 8191 + data_source_from;

    return hashCode;
  }

  @Override
  public int compareTo(point_traj_t other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = java.lang.Boolean.valueOf(isSetUser_id()).compareTo(other.isSetUser_id());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetUser_id()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.user_id, other.user_id);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetPoint_vec()).compareTo(other.isSetPoint_vec());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPoint_vec()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.point_vec, other.point_vec);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetBiztype()).compareTo(other.isSetBiztype());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetBiztype()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.biztype, other.biztype);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetRole()).compareTo(other.isSetRole());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRole()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.role, other.role);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetPhone()).compareTo(other.isSetPhone());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPhone()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.phone, other.phone);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetIntime()).compareTo(other.isSetIntime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetIntime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.intime, other.intime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetData_source_from()).compareTo(other.isSetData_source_from());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetData_source_from()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.data_source_from, other.data_source_from);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    scheme(iprot).read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    scheme(oprot).write(oprot, this);
  }

  @Override
  public java.lang.String toString() {
    java.lang.StringBuilder sb = new java.lang.StringBuilder("point_traj_t(");
    boolean first = true;

    sb.append("user_id:");
    if (this.user_id == null) {
      sb.append("null");
    } else {
      sb.append(this.user_id);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("point_vec:");
    if (this.point_vec == null) {
      sb.append("null");
    } else {
      sb.append(this.point_vec);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("biztype:");
    sb.append(this.biztype);
    first = false;
    if (!first) sb.append(", ");
    sb.append("role:");
    sb.append(this.role);
    first = false;
    if (!first) sb.append(", ");
    sb.append("phone:");
    if (this.phone == null) {
      sb.append("null");
    } else {
      sb.append(this.phone);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("intime:");
    sb.append(this.intime);
    first = false;
    if (isSetData_source_from()) {
      if (!first) sb.append(", ");
      sb.append("data_source_from:");
      sb.append(this.data_source_from);
      first = false;
    }
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class point_traj_tStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public point_traj_tStandardScheme getScheme() {
      return new point_traj_tStandardScheme();
    }
  }

  private static class point_traj_tStandardScheme extends org.apache.thrift.scheme.StandardScheme<point_traj_t> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, point_traj_t struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // USER_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.user_id = iprot.readString();
              struct.setUser_idIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // POINT_VEC
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list8 = iprot.readListBegin();
                struct.point_vec = new java.util.ArrayList<time_point_t>(_list8.size);
                time_point_t _elem9;
                for (int _i10 = 0; _i10 < _list8.size; ++_i10)
                {
                  _elem9 = new time_point_t();
                  _elem9.read(iprot);
                  struct.point_vec.add(_elem9);
                }
                iprot.readListEnd();
              }
              struct.setPoint_vecIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // BIZTYPE
            if (schemeField.type == org.apache.thrift.protocol.TType.I16) {
              struct.biztype = iprot.readI16();
              struct.setBiztypeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // ROLE
            if (schemeField.type == org.apache.thrift.protocol.TType.I16) {
              struct.role = iprot.readI16();
              struct.setRoleIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // PHONE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.phone = iprot.readString();
              struct.setPhoneIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // INTIME
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.intime = iprot.readI64();
              struct.setIntimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // DATA_SOURCE_FROM
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.data_source_from = iprot.readI32();
              struct.setData_source_fromIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, point_traj_t struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.user_id != null) {
        oprot.writeFieldBegin(USER_ID_FIELD_DESC);
        oprot.writeString(struct.user_id);
        oprot.writeFieldEnd();
      }
      if (struct.point_vec != null) {
        oprot.writeFieldBegin(POINT_VEC_FIELD_DESC);
        {
          oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, struct.point_vec.size()));
          for (time_point_t _iter11 : struct.point_vec)
          {
            _iter11.write(oprot);
          }
          oprot.writeListEnd();
        }
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(BIZTYPE_FIELD_DESC);
      oprot.writeI16(struct.biztype);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(ROLE_FIELD_DESC);
      oprot.writeI16(struct.role);
      oprot.writeFieldEnd();
      if (struct.phone != null) {
        oprot.writeFieldBegin(PHONE_FIELD_DESC);
        oprot.writeString(struct.phone);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(INTIME_FIELD_DESC);
      oprot.writeI64(struct.intime);
      oprot.writeFieldEnd();
      if (struct.isSetData_source_from()) {
        oprot.writeFieldBegin(DATA_SOURCE_FROM_FIELD_DESC);
        oprot.writeI32(struct.data_source_from);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class point_traj_tTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public point_traj_tTupleScheme getScheme() {
      return new point_traj_tTupleScheme();
    }
  }

  private static class point_traj_tTupleScheme extends org.apache.thrift.scheme.TupleScheme<point_traj_t> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, point_traj_t struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet optionals = new java.util.BitSet();
      if (struct.isSetUser_id()) {
        optionals.set(0);
      }
      if (struct.isSetPoint_vec()) {
        optionals.set(1);
      }
      if (struct.isSetBiztype()) {
        optionals.set(2);
      }
      if (struct.isSetRole()) {
        optionals.set(3);
      }
      if (struct.isSetPhone()) {
        optionals.set(4);
      }
      if (struct.isSetIntime()) {
        optionals.set(5);
      }
      if (struct.isSetData_source_from()) {
        optionals.set(6);
      }
      oprot.writeBitSet(optionals, 7);
      if (struct.isSetUser_id()) {
        oprot.writeString(struct.user_id);
      }
      if (struct.isSetPoint_vec()) {
        {
          oprot.writeI32(struct.point_vec.size());
          for (time_point_t _iter12 : struct.point_vec)
          {
            _iter12.write(oprot);
          }
        }
      }
      if (struct.isSetBiztype()) {
        oprot.writeI16(struct.biztype);
      }
      if (struct.isSetRole()) {
        oprot.writeI16(struct.role);
      }
      if (struct.isSetPhone()) {
        oprot.writeString(struct.phone);
      }
      if (struct.isSetIntime()) {
        oprot.writeI64(struct.intime);
      }
      if (struct.isSetData_source_from()) {
        oprot.writeI32(struct.data_source_from);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, point_traj_t struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet incoming = iprot.readBitSet(7);
      if (incoming.get(0)) {
        struct.user_id = iprot.readString();
        struct.setUser_idIsSet(true);
      }
      if (incoming.get(1)) {
        {
          org.apache.thrift.protocol.TList _list13 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
          struct.point_vec = new java.util.ArrayList<time_point_t>(_list13.size);
          time_point_t _elem14;
          for (int _i15 = 0; _i15 < _list13.size; ++_i15)
          {
            _elem14 = new time_point_t();
            _elem14.read(iprot);
            struct.point_vec.add(_elem14);
          }
        }
        struct.setPoint_vecIsSet(true);
      }
      if (incoming.get(2)) {
        struct.biztype = iprot.readI16();
        struct.setBiztypeIsSet(true);
      }
      if (incoming.get(3)) {
        struct.role = iprot.readI16();
        struct.setRoleIsSet(true);
      }
      if (incoming.get(4)) {
        struct.phone = iprot.readString();
        struct.setPhoneIsSet(true);
      }
      if (incoming.get(5)) {
        struct.intime = iprot.readI64();
        struct.setIntimeIsSet(true);
      }
      if (incoming.get(6)) {
        struct.data_source_from = iprot.readI32();
        struct.setData_source_fromIsSet(true);
      }
    }
  }

  private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
    return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
  }
}

